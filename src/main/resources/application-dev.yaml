weather:
  api:
    key: 7df8c6159854bab2a4ea8096e9136f8b
spring:
  redis:
    host: redis-10413.crce182.ap-south-1-1.ec2.redns.redis-cloud.com
    port: 10413
    password: fFZxagYG0YOC3MnGdVvrrqqAWyM4bk84
  data:
    mongodb:
      uri: mongodb+srv://root:root@cluster0.h1xys.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      database: journaldb
      auto-index-creation: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: pninja346@gmail.com
    password: rdgb zgew tasm gepw
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  kafka:
    bootstrap-servers: pkc-l7pr2.ap-south-1.aws.confluent.cloud:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: weekly-sentiment-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: net.engineeringdigest.journalApp.model
    properties:
      security:
        protocol: SASL_SSL
      sasl:
        mechanism: PLAIN
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username='JNLNZMMQXK25FDX2' password='2crxpK9pcAx4HOM56bSVNo0BWszhWSbzipdXL+uqtnsATX8wIocBoLMnnhuvkcRg';
      session:
        timeout:
          ms: 45000

server:
  port: 8080
  servlet:
    context-path: /journal


#logging:
#  level:
#    net:
#      engineeringdigest:
#        journalApp: TRACE     # we can set anything (TRACE, DEBUG, INFO, WARN, ERROR)  (TRACE < DEBUG < INFO < WARN < ERROR (PRECEDING ORDER))

#logging:
#  level:
#    root: ERROR

#logging:
#  level:
#    net:
#      engineeringdigest:
#        journalApp:
#          service:
#            UserService: OFF
